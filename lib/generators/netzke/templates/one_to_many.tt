class <%= model.capitalize %>Manager < Netzke::Base
  include Netzke::Basepack::ItemPersistence

  js_configure do |c|
    c.mixin
    c.prevent_header = true
    c.border = true
    c.layout = :border
  end

  def configure(c)
    c.items = [:<%= model.underscore %>_grid, :<%= submodel.underscore %>_grid]
    super
  end

  endpoint :select_container_record do |params, this|
    component_session[:container_id] = params[:id]
  end

  component :container do |c|
    c.klass ||= <%= model.capitalize %>Grid
    c.title ||= "Container"
    c.region ||= :west
    c.width ||= 300
    c.merge!(config.container_config || {})
  end

  component :collection do |c|
    c.klass ||= <%= model.capitalize %>Grid

    c.region ||= :center
    c.load_inline_data = false

    collection_config = config.collection_config.try(:dup) || {} # dupping because config hash is frozen

    # Make sure the data in the collection grid is bound to the selected container record
    c.scope = (c.scope || {}).merge(config.foreign_key => component_session[:container_id]).merge(collection_config.delete(:scope) || {})
    c.strong_default_attrs = (c.strong_default_attrs || {}).merge(config.foreign_key => component_session[:container_id]).merge(collection_config.delete(:strong_default_attrs) || {})

    c.merge!(collection_config)
  end
end
